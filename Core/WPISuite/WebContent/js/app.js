// Generated by CoffeeScript 1.7.1
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $(function() {
    window.App = Ember.Application.create();
    $.ajax({
      dataType: 'json',
      url: 'API/planningpoker/planningpokersession',
      async: false,
      success: (function(_this) {
        return function(data) {
          var session, _i, _len;
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            session = data[_i];
            session['requirements'] = [];
          }
          return App.Sessions = data;
        };
      })(this)
    });
    $.ajax({
      dataType: 'json',
      url: 'API/requirementmanager/requirement',
      async: false,
      success: (function(_this) {
        return function(data) {
          var estimate, numUsers, numVotes, percent, requirement, session, _i, _len, _results;
          _results = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            requirement = data[_i];
            _results.push((function() {
              var _j, _k, _len1, _len2, _ref, _ref1, _ref2, _results1;
              _ref = App.Sessions;
              _results1 = [];
              for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
                session = _ref[_j];
                if (_ref1 = requirement['id'], __indexOf.call(session['requirementIDs'], _ref1) >= 0) {
                  numUsers = session['project']['team'].length;
                  numVotes = 0;
                  _ref2 = session['estimates'];
                  for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
                    estimate = _ref2[_k];
                    if (estimate['requirementID'] === requirement['id']) {
                      numVotes++;
                    }
                  }
                  percent = 0;
                  if (numUsers > 0) {
                    percent = parseInt((numVotes / numUsers) * 100);
                  }
                  requirement['percent'] = "" + percent + "%";
                  session['requirements'].push(requirement);
                  _results1.push((function() {
                    var _l, _len3, _ref3, _results2;
                    _ref3 = session['estimates'];
                    _results2 = [];
                    for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
                      estimate = _ref3[_l];
                      if (requirement['id'] === estimate['requirementID']) {
                        _results2.push(estimate['requirement'] = requirement);
                      } else {
                        _results2.push(void 0);
                      }
                    }
                    return _results2;
                  })());
                } else {
                  _results1.push(void 0);
                }
              }
              return _results1;
            })());
          }
          return _results;
        };
      })(this)
    });
    App.Router.map(function() {
      return this.resource('sessions', {
        path: '/'
      }, function() {
        return this.resource('session', {
          path: '/:session_uuid'
        });
      });
    });
    App.SessionsRoute = Ember.Route.extend({
      model: function() {
        return App.Sessions;
      }
    });
    return App.SessionRoute = Ember.Route.extend({
      serialize: function(session) {
        return {
          session_uuid: session['uuid']
        };
      },
      model: function(params) {
        return App.Sessions.findBy('uuid', params.session_uuid);
      }
    });
  });

}).call(this);
